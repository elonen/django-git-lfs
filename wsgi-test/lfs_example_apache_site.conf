ServerName lfs

<VirtualHost *:80>
    ServerName lfs
    <Directory />
        Require all granted
    </Directory>
    

    # ======= Normal Git over HTTP =======

    # Only match actual Git commands (leave room for LFS extensions)
    ScriptAliasMatch \
        "(?x)^/git/(.*/(HEAD | \
                        info/refs | \
                        objects/(info/[^/]+ | \
                                 [0-9a-f]{2}/[0-9a-f]{38} | \
                                 pack/pack-[0-9a-f]{40}\.(pack|idx)) | \
                        git-(upload|receive)-pack))$" \
        /usr/lib/git-core/git-http-backend/$1

    <Directory "/usr/lib/git-core/">
        SetEnv GIT_PROJECT_ROOT /opt/git_repos
        SetEnv GIT_HTTP_EXPORT_ALL
        # Allow write access
        SetEnv REMOTE_USER=$REDIRECT_REMOTE_USER
        # Allow executing git-http-backend
        Options +ExecCGI
        Order allow,deny
        Allow from all
        Require all granted
    </Directory>


    # ======= Git LFS overlay =======

    # Use WSGI deamon for LFS standalone server
    WSGIDaemonProcess lfs_standalone python-path=/vagrant/_py_env/lib/python3.5/site-packages/:/vagrant/standalone_server/:/vagrant
    WSGIProcessGroup lfs_standalone
    WSGIApplicationGroup %{GLOBAL}

    # Extract repository name from URI and turn into storage dir name
    SetEnvIf Request_URI "^.*/git/([^/.]+)[.]git/info/lfs/.*$" DJLFS_BATCH_LOCAL_STORAGE_DIR=/opt/lfs_storages/$1

    # Match LFS commands
    WSGIScriptAliasMatch \
        "^/git/(?<reponame>[^/.]+[.]git)/info/lfs/(?<lfsuri>[^.]*)$" \
        /vagrant/standalone_server/lfs_standalone/wsgi.py/info/lfs/$2

</VirtualHost>
